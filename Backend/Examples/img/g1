digraph {
 44293032 [label="BusNode"];
44293032 -> 6634408 [label="activate"];
6634408 [label="FeatureTesterNode: type() == mass"];
6634408 -> 45001360 [label="activate"];
45001360 [label="FeatureTesterNode: preference (equal_literal) L('Veg')"];
45001360 -> 45001416 [label="activate"];
45001416 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F488>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3400>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F488>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F510>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3488>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F510>,)))"];
45001416 -> 45001472 [label="activate"];
45001472 [label="FeatureTesterNode: __pattern_44987760__ <= <Fact>"];
45001472 -> 45108976 [label="activate"];
45108976 [label="ConflictSetNode: calorie_m"];
45001360 -> 45001528 [label="activate"];
45001528 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BA60>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3620>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BA60>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BAE8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF36A8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BAE8>,)))"];
45001528 -> 45001584 [label="activate"];
45001584 [label="FeatureTesterNode: __pattern_44987232__ <= <Fact>"];
45001584 -> 45109088 [label="activate"];
45109088 [label="ConflictSetNode: calorie_j"];
45001360 -> 45001640 [label="activate"];
45001640 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B598>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3950>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B598>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B620>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF39D8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B620>,)))"];
45001640 -> 45001696 [label="activate"];
45001696 [label="FeatureTesterNode: __pattern_44986968__ <= <Fact>"];
45001696 -> 45109032 [label="activate"];
45109032 [label="ConflictSetNode: calorie_h"];
45001360 -> 45001752 [label="activate"];
45001752 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F158>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3AE8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F158>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F1E0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3B70>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F1E0>,)))"];
45001752 -> 45001808 [label="activate"];
45001808 [label="FeatureTesterNode: __pattern_44987584__ <= <Fact>"];
45001808 -> 45138384 [label="activate"];
45138384 [label="ConflictSetNode: calorie_l"];
45001360 -> 45001864 [label="activate"];
45001864 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42EA0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3E18>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42EA0>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42F28>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3EA0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42F28>,)))"];
45001864 -> 45001920 [label="activate"];
45001920 [label="FeatureTesterNode: __pattern_44986616__ <= <Fact>"];
45001920 -> 45138720 [label="activate"];
45138720 [label="ConflictSetNode: calorie_f"];
45001360 -> 45001976 [label="activate"];
45001976 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42840>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8048>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42840>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A428C8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF80D0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A428C8>,)))"];
45001976 -> 45002032 [label="activate"];
45002032 [label="FeatureTesterNode: __pattern_44785160__ <= <Fact>"];
45002032 -> 45139056 [label="activate"];
45139056 [label="ConflictSetNode: calorie_d"];
45001360 -> 45002088 [label="activate"];
45002088 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53840>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF81E0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53840>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A538C8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8268>, expected=P(<function MyDietician.<lambda> at 0x0000000002A538C8>,)))"];
45002088 -> 45002144 [label="activate"];
45002144 [label="FeatureTesterNode: __pattern_44988816__ <= <Fact>"];
45002144 -> 45139168 [label="activate"];
45139168 [label="ConflictSetNode: calorie_s"];
45001360 -> 45002200 [label="activate"];
45002200 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x000000000232C510>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8378>, expected=P(<function MyDietician.<lambda> at 0x000000000232C510>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A3CEA0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8400>, expected=P(<function MyDietician.<lambda> at 0x0000000002A3CEA0>,)))"];
45002200 -> 45002256 [label="activate"];
45002256 [label="FeatureTesterNode: __pattern_44784896__ <= <Fact>"];
45002256 -> 45139504 [label="activate"];
45139504 [label="ConflictSetNode: calorie_a"];
45001360 -> 45002312 [label="activate"];
45002312 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42B70>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8510>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42B70>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42BF8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8598>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42BF8>,)))"];
45002312 -> 45002368 [label="activate"];
45002368 [label="FeatureTesterNode: __pattern_44986440__ <= <Fact>"];
45002368 -> 44293200 [label="activate"];
44293200 [label="ConflictSetNode: calorie_e"];
45001360 -> 45002424 [label="activate"];
45002424 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F7B8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8840>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F7B8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F840>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF88C8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F840>,)))"];
45002424 -> 45002480 [label="activate"];
45002480 [label="FeatureTesterNode: __pattern_44987936__ <= <Fact>"];
45002480 -> 45109144 [label="activate"];
45109144 [label="ConflictSetNode: calorie_n"];
45001360 -> 45002536 [label="activate"];
45002536 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53B70>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF89D8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53B70>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53BF8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8A60>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53BF8>,)))"];
45002536 -> 45002592 [label="activate"];
45002592 [label="FeatureTesterNode: __pattern_44988992__ <= <Fact>"];
45002592 -> 45139560 [label="activate"];
45139560 [label="ConflictSetNode: calorie_t"];
45001360 -> 45002648 [label="activate"];
45002648 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BD90>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8EA0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BD90>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BE18>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8F28>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BE18>,)))"];
45002648 -> 45002704 [label="activate"];
45002704 [label="FeatureTesterNode: __pattern_44987408__ <= <Fact>"];
45002704 -> 45108528 [label="activate"];
45108528 [label="ConflictSetNode: calorie_k"];
45001360 -> 45105224 [label="activate"];
45105224 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42510>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA400>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42510>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42598>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA488>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42598>,)))"];
45105224 -> 45105280 [label="activate"];
45105280 [label="FeatureTesterNode: __pattern_44784720__ <= <Fact>"];
45105280 -> 45138048 [label="activate"];
45138048 [label="ConflictSetNode: calorie_c"];
45001360 -> 45105336 [label="activate"];
45105336 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53510>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA598>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53510>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53598>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA620>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53598>,)))"];
45105336 -> 45105392 [label="activate"];
45105392 [label="FeatureTesterNode: __pattern_44988640__ <= <Fact>"];
45105392 -> 45138160 [label="activate"];
45138160 [label="ConflictSetNode: calorie_r"];
45001360 -> 45105448 [label="activate"];
45105448 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B268>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE158>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B268>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B2F0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE1E0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B2F0>,)))"];
45105448 -> 45105504 [label="activate"];
45105504 [label="FeatureTesterNode: __pattern_44986792__ <= <Fact>"];
45105504 -> 45138496 [label="activate"];
45138496 [label="ConflictSetNode: calorie_g"];
45001360 -> 45105560 [label="activate"];
45105560 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A421E0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE620>, expected=P(<function MyDietician.<lambda> at 0x0000000002A421E0>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42268>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE6A8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42268>,)))"];
45105560 -> 45105616 [label="activate"];
45105616 [label="FeatureTesterNode: __pattern_44784984__ <= <Fact>"];
45105616 -> 45139280 [label="activate"];
45139280 [label="ConflictSetNode: calorie_b"];
45001360 -> 45105672 [label="activate"];
45105672 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A531E0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE7B8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A531E0>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53268>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE840>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53268>,)))"];
45105672 -> 45105728 [label="activate"];
45105728 [label="FeatureTesterNode: __pattern_44988464__ <= <Fact>"];
45105728 -> 45139392 [label="activate"];
45139392 [label="ConflictSetNode: calorie_q"];
45001360 -> 45105784 [label="activate"];
45105784 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4FE18>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE950>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4FE18>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4FEA0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE9D8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4FEA0>,)))"];
45105784 -> 45105840 [label="activate"];
45105840 [label="FeatureTesterNode: __pattern_44988288__ <= <Fact>"];
45105840 -> 45139616 [label="activate"];
45139616 [label="ConflictSetNode: calorie_p"];
45001360 -> 45105896 [label="activate"];
45105896 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B8C8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFEAE8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B8C8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B950>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFEB70>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B950>,)))"];
45105896 -> 45105952 [label="activate"];
45105952 [label="FeatureTesterNode: __pattern_44987144__ <= <Fact>"];
45105952 -> 45139728 [label="activate"];
45139728 [label="ConflictSetNode: calorie_i"];
45001360 -> 45106008 [label="activate"];
45106008 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4FAE8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFEE18>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4FAE8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4FB70>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFEEA0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4FB70>,)))"];
45106008 -> 45106064 [label="activate"];
45106064 [label="FeatureTesterNode: __pattern_44988112__ <= <Fact>"];
45106064 -> 45138664 [label="activate"];
45138664 [label="ConflictSetNode: calorie_o"];
6634408 -> 45106120 [label="activate"];
45106120 [label="FeatureTesterNode: preference (equal_literal) L('Non-veg')"];
45106120 -> 45106176 [label="activate"];
45106176 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4FC80>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF0E18>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4FC80>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4FD08>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF0EA0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4FD08>,)))"];
45106176 -> 45106232 [label="activate"];
45106232 [label="FeatureTesterNode: __pattern_44988200__ <= <Fact>"];
45106232 -> 36778056 [label="activate"];
36778056 [label="ConflictSetNode: calorie_oo"];
45106120 -> 45106288 [label="activate"];
45106288 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F620>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF30D0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F620>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F6A8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3158>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F6A8>,)))"];
45106288 -> 45106344 [label="activate"];
45106344 [label="FeatureTesterNode: __pattern_44987848__ <= <Fact>"];
45106344 -> 45108416 [label="activate"];
45108416 [label="ConflictSetNode: calorie_mm"];
45106120 -> 45106400 [label="activate"];
45106400 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F950>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3268>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F950>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F9D8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF32F0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F9D8>,)))"];
45106400 -> 45106456 [label="activate"];
45106456 [label="FeatureTesterNode: __pattern_44988024__ <= <Fact>"];
45106456 -> 45108752 [label="activate"];
45108752 [label="ConflictSetNode: calorie_nn"];
45106120 -> 45106512 [label="activate"];
45106512 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BF28>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF37B8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BF28>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F048>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3840>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F048>,)))"];
45106512 -> 45106568 [label="activate"];
45106568 [label="FeatureTesterNode: __pattern_44987496__ <= <Fact>"];
45106568 -> 45109200 [label="activate"];
45109200 [label="ConflictSetNode: calorie_kk"];
45106120 -> 45106624 [label="activate"];
45106624 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B0D0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3C80>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B0D0>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B158>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF3D08>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B158>,)))"];
45106624 -> 45106680 [label="activate"];
45106680 [label="FeatureTesterNode: __pattern_44986704__ <= <Fact>"];
45106680 -> 45138608 [label="activate"];
45138608 [label="ConflictSetNode: calorie_ff"];
45106120 -> 45106736 [label="activate"];
45106736 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B730>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF86A8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B730>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B7B8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8730>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B7B8>,)))"];
45106736 -> 45106792 [label="activate"];
45106792 [label="FeatureTesterNode: __pattern_44987056__ <= <Fact>"];
45106792 -> 45108696 [label="activate"];
45108696 [label="ConflictSetNode: calorie_hh"];
45106120 -> 45106848 [label="activate"];
45106848 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42378>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8B70>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42378>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42400>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8BF8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42400>,)))"];
45106848 -> 45106904 [label="activate"];
45106904 [label="FeatureTesterNode: __pattern_44781640__ <= <Fact>"];
45106904 -> 45139336 [label="activate"];
45139336 [label="ConflictSetNode: calorie_bb"];
45106120 -> 45106960 [label="activate"];
45106960 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53378>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8D08>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53378>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53400>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AF8D90>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53400>,)))"];
45106960 -> 45107016 [label="activate"];
45107016 [label="FeatureTesterNode: __pattern_44988552__ <= <Fact>"];
45107016 -> 45139112 [label="activate"];
45139112 [label="ConflictSetNode: calorie_qq"];
45106120 -> 45107072 [label="activate"];
45107072 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A429D8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA0D0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A429D8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42A60>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA158>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42A60>,)))"];
45107072 -> 45107128 [label="activate"];
45107128 [label="FeatureTesterNode: __pattern_44785248__ <= <Fact>"];
45107128 -> 45108640 [label="activate"];
45108640 [label="ConflictSetNode: calorie_dd"];
45106120 -> 45107184 [label="activate"];
45107184 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A539D8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA268>, expected=P(<function MyDietician.<lambda> at 0x0000000002A539D8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53A60>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA2F0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53A60>,)))"];
45107184 -> 45107240 [label="activate"];
45107240 [label="FeatureTesterNode: __pattern_44988904__ <= <Fact>"];
45107240 -> 45108864 [label="activate"];
45108864 [label="ConflictSetNode: calorie_ss"];
45106120 -> 45107296 [label="activate"];
45107296 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F2F0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA730>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F2F0>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4F378>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA7B8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4F378>,)))"];
45107296 -> 45107352 [label="activate"];
45107352 [label="FeatureTesterNode: __pattern_44987672__ <= <Fact>"];
45107352 -> 45138272 [label="activate"];
45138272 [label="ConflictSetNode: calorie_ll"];
45106120 -> 45107408 [label="activate"];
45107408 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A426A8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA8C8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A426A8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42730>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFA950>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42730>,)))"];
45107408 -> 45107464 [label="activate"];
45107464 [label="FeatureTesterNode: __pattern_44785072__ <= <Fact>"];
45107464 -> 45108808 [label="activate"];
45108808 [label="ConflictSetNode: calorie_cc"];
45106120 -> 45107520 [label="activate"];
45107520 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BBF8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFAA60>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BBF8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4BC80>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFAAE8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4BC80>,)))"];
45107520 -> 45107576 [label="activate"];
45107576 [label="FeatureTesterNode: __pattern_44987320__ <= <Fact>"];
45107576 -> 45108584 [label="activate"];
45108584 [label="ConflictSetNode: calorie_jj"];
45106120 -> 45107632 [label="activate"];
45107632 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42D08>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFABF8>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42D08>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42D90>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFAC80>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42D90>,)))"];
45107632 -> 45107688 [label="activate"];
45107688 [label="FeatureTesterNode: __pattern_44986528__ <= <Fact>"];
45107688 -> 45108360 [label="activate"];
45108360 [label="ConflictSetNode: calorie_ee"];
45106120 -> 45107744 [label="activate"];
45107744 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A536A8>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFAD90>, expected=P(<function MyDietician.<lambda> at 0x0000000002A536A8>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53730>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFAE18>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53730>,)))"];
45107744 -> 45107800 [label="activate"];
45107800 [label="FeatureTesterNode: __pattern_44988728__ <= <Fact>"];
45107800 -> 45138216 [label="activate"];
45138216 [label="ConflictSetNode: calorie_rr"];
45106120 -> 45107856 [label="activate"];
45107856 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53D08>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFAF28>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53D08>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53D90>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE048>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53D90>,)))"];
45107856 -> 45107912 [label="activate"];
45107912 [label="FeatureTesterNode: __pattern_44989080__ <= <Fact>"];
45107912 -> 45137992 [label="activate"];
45137992 [label="ConflictSetNode: calorie_tt"];
45106120 -> 45107968 [label="activate"];
45107968 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A42048>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE2F0>, expected=P(<function MyDietician.<lambda> at 0x0000000002A42048>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A420D0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE378>, expected=P(<function MyDietician.<lambda> at 0x0000000002A420D0>,)))"];
45107968 -> 45108024 [label="activate"];
45108024 [label="FeatureTesterNode: __pattern_44784456__ <= <Fact>"];
45108024 -> 45138832 [label="activate"];
45138832 [label="ConflictSetNode: calorie_aa"];
45106120 -> 45108080 [label="activate"];
45108080 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A53048>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE488>, expected=P(<function MyDietician.<lambda> at 0x0000000002A53048>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A530D0>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFE510>, expected=P(<function MyDietician.<lambda> at 0x0000000002A530D0>,)))"];
45108080 -> 45108136 [label="activate"];
45108136 [label="FeatureTesterNode: __pattern_44988376__ <= <Fact>"];
45108136 -> 45138944 [label="activate"];
45138944 [label="ConflictSetNode: calorie_pp"];
45106120 -> 45108192 [label="activate"];
45108192 [label="FeatureTesterNode: calorie (and_match) (FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B400>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFEC80>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B400>,)), FeatureCheck(what='calorie', how=P(<function MyDietician.<lambda> at 0x0000000002A4B488>,), check=<function FeatureCheck._.<locals>.match_predicate at 0x0000000002AFED08>, expected=P(<function MyDietician.<lambda> at 0x0000000002A4B488>,)))"];
45108192 -> 45108248 [label="activate"];
45108248 [label="FeatureTesterNode: __pattern_44986880__ <= <Fact>"];
45108248 -> 45138888 [label="activate"];
45138888 [label="ConflictSetNode: calorie_gg"];
44293032 -> 36780128 [label="activate"];
36780128 [label="FeatureTesterNode: type() == InitialFact"];
36780128 -> 45108304 [label="activate"];
45108304 [label="FeatureTesterNode: __pattern_44785336__ <= <Fact>"]; 
}
